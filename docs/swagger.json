{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Zahir Courier Service API.\n\n## Authorization\n\nThis service use Zahir ID Oauth 2.0 Authorization, you SHOULD make authenticated requests with a zahir id access token using the `Authorization` request header field with the `Bearer` HTTP authorization scheme\n```\nAuthorization: Bearer {access_token}\n```\nOn this docs, click `Authorize` \u003e fill the Value with `Bearer {access_token}` \u003e click `Authorize`. Once you've done that, when you `Try it out`, the authorization header with your bearer token should be sent to the API.\n\n## Query params\n\nBy default, we support a common way for selecting fields, filtering, searching, sorting, and pagination in URL query params on `GET` method:\n\n### Field\n\nGet selected fields in GET result, example:\n```\nGET /api/resources?fields=field_a,field_b,field_c\n```\nequivalent to sql:\n```sql\nSELECT field_a, field_b, field_c FROM resources\n```\n\n### Filter\n\nAdds fields request condition (multiple conditions) to the request, example:\n```\nGET /api/resources?field_a=value_a\u0026field_b.$gte=value_b\u0026field_c.$like=value_c\u0026field_d.$ilike=value_d%\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources WHERE (field_a = 'value_a') AND (field_b \u003e= value_b) AND (field_c LIKE '%value_c%') AND (LOWER(field_d) LIKE LOWER('value_d%'))\n```\n\n#### Available filter conditions\n\n* `$eq`: equal (`=`)\n* `$ne`: not equal (`!=`)\n* `$gt`: greater than (`\u003e`)\n* `$gte`: greater than or equal (`\u003e=`)\n* `$lt`: lower than (`\u003c`)\n* `$lte`: lower than or equal (`\u003c=`)\n* `$like`: contains (`LIKE '%value%'`)\n* `$ilike`: contains case insensitive (`LOWER(field) LIKE LOWER('%value%')`)\n* `$nlike`: not contains (`NOT LIKE '%value%'`)\n* `$nilike`: not contains case insensitive (`LOWER(field) NOT LIKE LOWER('%value%')`)\n* `$in`: in range, accepts multiple values (`IN ('value_a', 'value_b')`)\n* `$nin`: not in range, accepts multiple values (`NOT IN ('value_a', 'value_b')`)\n* `$regexp`: regex (`REGEXP '%value%'`)\n* `$nregexp`: not regex (`NOT REGEXP '%value%'`)\n\n### Or\n\nAdds `OR` conditions to the request, example:\n```\nGET /api/resources?or=field_a:val_a|field_b.$gte:val_b;field_c.$lte:val_c|field_d.$like:val_d\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources WHERE (field_a=val_a OR field_b \u003c= val_b) AND (field_c \u003c= val_c OR field_d LIKE '%val_d%')\n```\n\n### Search\n\nAdds a search conditions to the request, example:\n```\nGET /api/resources?search=field_a,field_b:term_1;field_c,field_d:term_2\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources WHERE (LOWER(field_a) LIKE LOWER('%term_1%') OR LOWER(field_b) LIKE LOWER('%term_1%')) AND (LOWER(field_c) LIKE LOWER('%term_2%') OR LOWER(field_d) LIKE LOWER('%term_2%'))\n```\n\n### Sort\n\nAdds sort by field (by multiple fields) and order to query result, example:\n```\nGET /api/resources?sorts=field_a,-field_b,field_c:i,-field_d:i\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources ORDER BY field_a ASC, field_b DESC, LOWER(field_c) ASC, LOWER(field_d) DESC\n```\n\n### Page\n\nSpecify the page of results to return, example:\n```\nGET /api/resources?page=3\u0026per_page=10\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources LIMIT 10 OFFSET 20\n```\n\n### Per Page\n\nSpecify the number of records to return in one request, example:\n```\nGET /api/resources?per_page=10\n```\nequivalent to sql:\n```sql\nSELECT * FROM resources LIMIT 10\n```",
        "title": "Zahir Courier Service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:4000",
    "basePath": "/",
    "paths": {
        "/api/callback/gosend/deliveries": {
            "post": {
                "description": "Webhooks Call Back API",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Webhooks Call Back API",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CallbackGosend"
                        }
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/cities": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get city list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Get city list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.City"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Create new city",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/cities/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get city by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Get city by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update city by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Update city by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete city by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Delete city by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partial update city by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "City"
                ],
                "summary": "Partial update city by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.City"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/countries": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get country list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get country list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Country"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/countries/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get country by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Country"
                ],
                "summary": "Get country by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Country"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            }
        },
        "/api/courier_services": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get courier service list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Service"
                ],
                "summary": "Get courier service list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.CourierService"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/courier_services/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get courier service by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier Service"
                ],
                "summary": "Get courier service by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CourierService"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            }
        },
        "/api/couriers": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get courier list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Get courier list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Courier"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/couriers/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get courier by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Courier"
                ],
                "summary": "Get courier by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Courier ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Courier"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            }
        },
        "/api/deliveries": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Request Delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Request Delivery",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostDelivery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PostDelivery"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/deliveries/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get delivery by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Get delivery by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Delivery ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Delivery"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Cancel Delivery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery"
                ],
                "summary": "Cancel Delivery",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PostCancelDelivery"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Delivery"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/delivery_cost_estimation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Calculate Delivery Cost Estimation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Delivery Cost Estimation"
                ],
                "summary": "Calculate Delivery Cost Estimation",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeliveryCostEstimation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DeliveryCostEstimation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/provinces": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get province list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Get province list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Province"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new province",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Create new province",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/provinces/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get province by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Get province by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Province ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update province by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Update province by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete province by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Delete province by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partial update province by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Province"
                ],
                "summary": "Partial update province by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Province"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/setting": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get current setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "summary": "Get current setting",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SettingShort"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update current setting",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Setting"
                ],
                "summary": "Update current setting",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SettingShort"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SettingShort"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/subdistricts": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get subdistrict list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Get subdistrict list",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search conditions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by fields",
                        "name": "sorts",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the page of results to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Specify the number of records to return in one request",
                        "name": "per_page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.HTTPList"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "results": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Subdistrict"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create new subdistrict",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Create new subdistrict",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        },
        "/api/subdistricts/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get subdistrict by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Get subdistrict by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subdistrict ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPNotFound"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update subdistrict by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Update subdistrict by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete subdistrict by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Delete subdistrict by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPDeleted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partial update subdistrict by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Subdistrict"
                ],
                "summary": "Partial update subdistrict by id",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Subdistrict"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPBadRequest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPUnauthorized"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/helpers.HTTPForbidden"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "helpers.HTTPBadRequest": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 400
                        },
                        "message": {
                            "type": "string",
                            "example": "Field xxx wajib diisi."
                        }
                    }
                }
            }
        },
        "helpers.HTTPDeleted": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "message": {
                    "type": "string",
                    "example": "Data dengan id = '6e8ef30f-c443-48b7-89e4-964c207245d9' berhasil dihapus."
                }
            }
        },
        "helpers.HTTPForbidden": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 403
                        },
                        "message": {
                            "type": "string",
                            "example": "Pengguna tidak memiliki cukup izin untuk mengakses sumber daya."
                        }
                    }
                }
            }
        },
        "helpers.HTTPList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer",
                    "example": 1
                },
                "page_context": {
                    "type": "object",
                    "properties": {
                        "page": {
                            "type": "integer",
                            "example": 1
                        },
                        "per_page": {
                            "type": "integer",
                            "example": 10
                        },
                        "total_pages": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                },
                "results": {
                    "type": "object"
                }
            }
        },
        "helpers.HTTPNotFound": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 404
                        },
                        "message": {
                            "type": "string",
                            "example": "Data dengan id = '6e8ef30f-c443-48b7-89e4-964c207245d9' tidak ditemukan."
                        }
                    }
                }
            }
        },
        "helpers.HTTPUnauthorized": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "properties": {
                        "code": {
                            "type": "integer",
                            "example": 401
                        },
                        "message": {
                            "type": "string",
                            "example": "Token otentikasi tidak valid."
                        }
                    }
                }
            }
        },
        "models.CallbackGosend": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "object",
                    "properties": {
                        "key1": {
                            "type": "string"
                        },
                        "key2": {
                            "type": "string"
                        }
                    }
                },
                "booking_id": {
                    "type": "string",
                    "example": "123456"
                },
                "booking_type": {
                    "type": "string",
                    "example": "instant"
                },
                "cancellation_reason": {
                    "type": "string"
                },
                "cancelled_by": {
                    "type": "string",
                    "example": "driver"
                },
                "delivery_eta": {
                    "type": "string",
                    "example": "1486528708000-1486528709000"
                },
                "driver_name": {
                    "type": "string"
                },
                "driver_phone": {
                    "type": "string"
                },
                "driver_phone2": {
                    "type": "string"
                },
                "driver_phone3": {
                    "type": "string"
                },
                "driver_photo_url": {
                    "type": "string"
                },
                "entity_id": {
                    "type": "string"
                },
                "event_date": {
                    "type": "integer",
                    "example": 1486105171000
                },
                "event_id": {
                    "type": "string",
                    "example": "72d82762-8bcc-4412-a180-c71ffcef011a"
                },
                "live_tracking_url": {
                    "type": "string",
                    "example": "http://gjk.io/abcd"
                },
                "partner_id": {
                    "type": "string",
                    "example": "some-partner-id"
                },
                "pickup_eta": {
                    "type": "string",
                    "example": "1486528706000-1486528707000"
                },
                "price": {
                    "type": "number"
                },
                "receiver_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "example": "confirmed"
                },
                "total_distance_in_kms": {
                    "type": "number"
                },
                "type": {
                    "type": "string",
                    "example": "COMPLETED"
                }
            }
        },
        "models.City": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "id": {
                    "type": "integer",
                    "example": 115
                },
                "name": {
                    "type": "string",
                    "example": "Kota Depok"
                },
                "province": {
                    "$ref": "#/definitions/models.ProvinceShort"
                },
                "type": {
                    "type": "string",
                    "example": "Kota"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.CityShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 115
                },
                "name": {
                    "type": "string",
                    "example": "Kota Depok"
                }
            }
        },
        "models.Country": {
            "type": "object",
            "properties": {
                "calling_codes": {
                    "type": "string",
                    "example": "62"
                },
                "capital": {
                    "type": "string",
                    "example": "Jakarta"
                },
                "code": {
                    "type": "string",
                    "example": "ID"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "name": {
                    "type": "string",
                    "example": "Indonesia"
                },
                "region": {
                    "type": "string",
                    "example": "Asia"
                },
                "subregion": {
                    "type": "string",
                    "example": "South-Eastern Asia"
                },
                "time_zones": {
                    "type": "string",
                    "example": "UTC+07:00,UTC+08:00,UTC+09:00"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.CountryShort": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "ID"
                },
                "name": {
                    "type": "string",
                    "example": "Indonesia"
                }
            }
        },
        "models.Courier": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "jne"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "deleted_at": {
                    "type": "string"
                },
                "delivery_cost_estimation_key": {
                    "type": "string",
                    "example": "country,city,subdistrict"
                },
                "delivery_tracking_type": {
                    "type": "string",
                    "example": "waybill_manifest"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "Jalur Nugraha Ekakurir (JNE)"
                },
                "pickup_service": {
                    "type": "string",
                    "example": "uknown"
                },
                "provider": {
                    "type": "string",
                    "example": "rajaongkir"
                },
                "sort_number": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.CourierService": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "gosend-instant"
                },
                "courier": {
                    "$ref": "#/definitions/models.CourierShort"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "image_url": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "Instant"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.CourierShort": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "jne"
                },
                "delivery_cost_estimation_key": {
                    "type": "string",
                    "example": "country,city,subdistrict"
                },
                "delivery_tracking_type": {
                    "type": "string",
                    "example": "waybill_manifest"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Jalur Nugraha Ekakurir (JNE)"
                },
                "pickup_service": {
                    "type": "string",
                    "example": "uknown"
                },
                "sort_number": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "models.Delivery": {
            "type": "object",
            "properties": {
                "callback_url": {
                    "type": "string"
                },
                "courier_service_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "description": {
                    "type": "string"
                },
                "destination_address": {
                    "type": "string"
                },
                "destination_contact_name": {
                    "type": "string"
                },
                "destination_contact_phone": {
                    "type": "string"
                },
                "destination_lati": {
                    "type": "number"
                },
                "destination_longitude": {
                    "type": "number"
                },
                "destination_name": {
                    "type": "string"
                },
                "destination_note": {
                    "type": "string"
                },
                "driver_id": {
                    "type": "string"
                },
                "driver_name": {
                    "type": "string"
                },
                "driver_phone": {
                    "type": "string"
                },
                "driver_photo": {
                    "type": "string"
                },
                "driver_vehicle_number": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "222a761e-7dfc-4586-8f39-0d0fb59bb050"
                },
                "live_tracking_url": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "origin_address": {
                    "type": "string"
                },
                "origin_contact_name": {
                    "type": "string"
                },
                "origin_contact_phone": {
                    "type": "string"
                },
                "origin_latitude": {
                    "type": "number"
                },
                "origin_longitude": {
                    "type": "number"
                },
                "origin_name": {
                    "type": "string"
                },
                "origin_note": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "received_at": {
                    "type": "string"
                },
                "receiver_name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.DeliveryCostEstimation": {
            "type": "object",
            "properties": {
                "courier": {
                    "type": "object",
                    "required": [
                        "id"
                    ],
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "destination": {
                    "type": "object",
                    "properties": {
                        "coordinate": {
                            "type": "object",
                            "properties": {
                                "latitude": {
                                    "type": "number",
                                    "example": -6.284508
                                },
                                "longitude": {
                                    "type": "number",
                                    "example": 106.8295789
                                }
                            }
                        },
                        "country": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 0
                                }
                            }
                        },
                        "subdistrict": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 2109
                                }
                            }
                        }
                    }
                },
                "diameter": {
                    "type": "integer",
                    "example": 1
                },
                "height": {
                    "type": "integer",
                    "example": 1
                },
                "length": {
                    "type": "integer",
                    "example": 1
                },
                "origin": {
                    "type": "object",
                    "properties": {
                        "city": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 153
                                }
                            }
                        },
                        "coordinate": {
                            "type": "object",
                            "properties": {
                                "latitude": {
                                    "type": "number",
                                    "example": -6.1263348
                                },
                                "longitude": {
                                    "type": "number",
                                    "example": 106.7890888
                                }
                            }
                        },
                        "subdistrict": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 2108
                                }
                            }
                        }
                    }
                },
                "weight": {
                    "type": "integer",
                    "example": 1
                },
                "width": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.PostCancelDelivery": {
            "type": "object",
            "properties": {
                "reason": {
                    "type": "string"
                }
            }
        },
        "models.PostDelivery": {
            "type": "object",
            "properties": {
                "callback_url": {
                    "type": "string",
                    "example": "https://go.zahironline.com/api/v2/tokoku/callback/deliveries/ddaffaa0-b2a4-447e-b76e-e17f601794f0"
                },
                "courier_service": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer",
                            "example": 65
                        }
                    }
                },
                "description": {
                    "type": "string",
                    "example": "Sepatu, Sendal, Kaos Kaki"
                },
                "destination": {
                    "type": "object",
                    "required": [
                        "address",
                        "contact_name",
                        "contact_phone",
                        "latitude",
                        "longitude"
                    ],
                    "properties": {
                        "address": {
                            "type": "string",
                            "example": "Jalan Jatianom, Pasar Minggu, 12540"
                        },
                        "contact_name": {
                            "type": "string",
                            "example": "Pak Nando"
                        },
                        "contact_phone": {
                            "type": "string",
                            "example": "6281254564161"
                        },
                        "latitude": {
                            "type": "number",
                            "example": -6.284508
                        },
                        "longitude": {
                            "type": "number",
                            "example": 106.8295789
                        },
                        "name": {
                            "type": "string",
                            "example": "Toko Jaya Agung"
                        },
                        "note": {
                            "type": "string",
                            "example": "Tolong Hati-Hati"
                        }
                    }
                },
                "number": {
                    "type": "string",
                    "example": "158480409321"
                },
                "origin": {
                    "type": "object",
                    "required": [
                        "address",
                        "contact_name",
                        "contact_phone",
                        "latitude",
                        "longitude"
                    ],
                    "properties": {
                        "address": {
                            "type": "string",
                            "example": "Jalan Pancoran Buntu I, Pancoran, 12780"
                        },
                        "contact_name": {
                            "type": "string",
                            "example": "Pak Andri"
                        },
                        "contact_phone": {
                            "type": "string",
                            "example": "6285201311802"
                        },
                        "latitude": {
                            "type": "number",
                            "example": -6.1263348
                        },
                        "longitude": {
                            "type": "number",
                            "example": 106.7890888
                        },
                        "name": {
                            "type": "string",
                            "example": "The Kingdom Shop"
                        },
                        "note": {
                            "type": "string",
                            "example": "Tunggu di Lobby"
                        }
                    }
                }
            }
        },
        "models.Province": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "country": {
                    "$ref": "#/definitions/models.CountryShort"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "id": {
                    "type": "integer",
                    "example": 9
                },
                "name": {
                    "type": "string",
                    "example": "Jawa Barat"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        },
        "models.ProvinceShort": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 9
                },
                "name": {
                    "type": "string",
                    "example": "Jawa Barat"
                }
            }
        },
        "models.SettingShort": {
            "type": "object",
            "properties": {
                "db.migration.version": {
                    "type": "string",
                    "example": "0036"
                },
                "db.seed.version": {
                    "type": "string",
                    "example": "0011"
                },
                "origin_address.subdistrict.id": {
                    "type": "string",
                    "example": "222a761e-7dfc-4586-8f39-0d0fb59bb050"
                }
            }
        },
        "models.Subdistrict": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "city": {
                    "$ref": "#/definitions/models.CityShort"
                },
                "created_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                },
                "id": {
                    "type": "integer",
                    "example": 1587
                },
                "name": {
                    "type": "string",
                    "example": "Tapos"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2020-03-16T13:55:09.598136+07:00"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}